<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\PaiLLMTrace\V20240311\Models\CreateOnlineEvalTaskRequest;

use AlibabaCloud\SDK\PaiLLMTrace\V20240311\Models\CreateOnlineEvalTaskRequest\body\filters;
use AlibabaCloud\SDK\PaiLLMTrace\V20240311\Models\EvaluationConfig;
use AlibabaCloud\SDK\PaiLLMTrace\V20240311\Models\ModelConfig;
use AlibabaCloud\Tea\Model;

class body extends Model
{
    /**
     * @description The name of the user application in the trace data.
     *
     * @example my-best-llm-app
     *
     * @var string
     */
    public $appName;

    /**
     * @description The description of the task.
     *
     * @example April to June data assessment
     *
     * @var string
     */
    public $description;

    /**
     * @description The end time of the trace data, in UTC format.
     *
     * @example 2025-06-05 14:00:01
     * 2025-06-05
     *
     * @var string
     */
    public $endTime;

    /**
     * @description This configuration structure defines the JSON paths needed to extract specific values from trace data in JSON format. EvaluationConfig defines these JSON paths.
     *
     * @var EvaluationConfig
     */
    public $evaluationConfig;

    /**
     * @description The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This list defines the search filter conditions.
     *
     * @var filters[]
     */
    public $filters;

    /**
     * @description The access configuration structure of the model used in the evaluation.
     *
     * @var ModelConfig
     */
    public $modelConfig;

    /**
     * @description The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This is the width of the time window for each search of input data.
     *
     * @example 9
     *
     * @var int
     */
    public $samplingFrequencyMinutes;

    /**
     * @description The percentage of data found in a time window that truly serves as evaluation input data. For example, 100 indicates that all data searched is used as evaluation input. 20 indicates that 20% of the found data is randomly selected as evaluation input.
     *
     * @example 50
     *
     * @var int
     */
    public $samplingRatio;

    /**
     * @description The start time of the trace data, in UTC format.
     *
     * @example 2025-04-05 14:00:01
     * 2025-04-05
     *
     * @var string
     */
    public $startTime;

    /**
     * @description The task name.
     *
     * @example my-llm-app-eval-task-1
     *
     * @var string
     */
    public $taskName;
    protected $_name = [
        'appName' => 'AppName',
        'description' => 'Description',
        'endTime' => 'EndTime',
        'evaluationConfig' => 'EvaluationConfig',
        'filters' => 'Filters',
        'modelConfig' => 'ModelConfig',
        'samplingFrequencyMinutes' => 'SamplingFrequencyMinutes',
        'samplingRatio' => 'SamplingRatio',
        'startTime' => 'StartTime',
        'taskName' => 'TaskName',
    ];

    public function validate() {}

    public function toMap()
    {
        $res = [];
        if (null !== $this->appName) {
            $res['AppName'] = $this->appName;
        }
        if (null !== $this->description) {
            $res['Description'] = $this->description;
        }
        if (null !== $this->endTime) {
            $res['EndTime'] = $this->endTime;
        }
        if (null !== $this->evaluationConfig) {
            $res['EvaluationConfig'] = null !== $this->evaluationConfig ? $this->evaluationConfig->toMap() : null;
        }
        if (null !== $this->filters) {
            $res['Filters'] = [];
            if (null !== $this->filters && \is_array($this->filters)) {
                $n = 0;
                foreach ($this->filters as $item) {
                    $res['Filters'][$n++] = null !== $item ? $item->toMap() : $item;
                }
            }
        }
        if (null !== $this->modelConfig) {
            $res['ModelConfig'] = null !== $this->modelConfig ? $this->modelConfig->toMap() : null;
        }
        if (null !== $this->samplingFrequencyMinutes) {
            $res['SamplingFrequencyMinutes'] = $this->samplingFrequencyMinutes;
        }
        if (null !== $this->samplingRatio) {
            $res['SamplingRatio'] = $this->samplingRatio;
        }
        if (null !== $this->startTime) {
            $res['StartTime'] = $this->startTime;
        }
        if (null !== $this->taskName) {
            $res['TaskName'] = $this->taskName;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return body
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AppName'])) {
            $model->appName = $map['AppName'];
        }
        if (isset($map['Description'])) {
            $model->description = $map['Description'];
        }
        if (isset($map['EndTime'])) {
            $model->endTime = $map['EndTime'];
        }
        if (isset($map['EvaluationConfig'])) {
            $model->evaluationConfig = EvaluationConfig::fromMap($map['EvaluationConfig']);
        }
        if (isset($map['Filters'])) {
            if (!empty($map['Filters'])) {
                $model->filters = [];
                $n = 0;
                foreach ($map['Filters'] as $item) {
                    $model->filters[$n++] = null !== $item ? filters::fromMap($item) : $item;
                }
            }
        }
        if (isset($map['ModelConfig'])) {
            $model->modelConfig = ModelConfig::fromMap($map['ModelConfig']);
        }
        if (isset($map['SamplingFrequencyMinutes'])) {
            $model->samplingFrequencyMinutes = $map['SamplingFrequencyMinutes'];
        }
        if (isset($map['SamplingRatio'])) {
            $model->samplingRatio = $map['SamplingRatio'];
        }
        if (isset($map['StartTime'])) {
            $model->startTime = $map['StartTime'];
        }
        if (isset($map['TaskName'])) {
            $model->taskName = $map['TaskName'];
        }

        return $model;
    }
}

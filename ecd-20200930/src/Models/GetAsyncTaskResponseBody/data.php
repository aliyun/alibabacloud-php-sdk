<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Ecd\V20200930\Models\GetAsyncTaskResponseBody;

use AlibabaCloud\Tea\Model;

class data extends Model
{
    /**
     * @description The asynchronous task ID.
     *
     * @example 000e89fb-cf8f-11e9-8ab4-b6e98080****
     *
     * @var string
     */
    public $asyncTaskId;

    /**
     * @description The total number of asynchronous tasks that are processed. Example: the number of files that are packaged and downloaded on the server.
     *
     * @example 100
     *
     * @var string
     */
    public $consumedProcess;

    /**
     * @description The error code of the asynchronous task.
     *
     * @example InternalError
     *
     * @var int
     */
    public $errCode;

    /**
     * @description The error message of the asynchronous task.
     *
     * @example The request has been failed due to some unknown error. Please try again later.
     *
     * @var string
     */
    public $message;

    /**
     * @description The task status.
     *
     * Valid values:
     *
     *   Failed: The task failed.
     *
     * <!-- -->
     *
     *   Running: The task was running.
     *
     * <!-- -->
     *
     *   PartialSucceed: The task did not completely succeed.
     *
     * <!-- -->
     *
     *   Succeed: The task succeeded.
     *
     * <!-- -->
     * @example Failed
     *
     * @var string
     */
    public $status;

    /**
     * @description The total number of asynchronous tasks to be processed, such as the amount of files to be downloaded and packaged on the server.
     *
     * @example 1000
     *
     * @var int
     */
    public $totalProcess;

    /**
     * @description The URL to download data generated by the asynchronous task. Example: the URL to package and download tasks on the server.
     *
     * @example https://data.aliyunpds.com/hz22%2F5d5b986facbec311ef844c25954f96821497b383%2F5d5b986f955410dd991646bb87c6b4e899eff525?Expires=xxx&OSSAccessKeyId=xxx&Signature=xxx
     *
     * @var string
     */
    public $url;
    protected $_name = [
        'asyncTaskId'     => 'AsyncTaskId',
        'consumedProcess' => 'ConsumedProcess',
        'errCode'         => 'ErrCode',
        'message'         => 'Message',
        'status'          => 'Status',
        'totalProcess'    => 'TotalProcess',
        'url'             => 'Url',
    ];

    public function validate()
    {
    }

    public function toMap()
    {
        $res = [];
        if (null !== $this->asyncTaskId) {
            $res['AsyncTaskId'] = $this->asyncTaskId;
        }
        if (null !== $this->consumedProcess) {
            $res['ConsumedProcess'] = $this->consumedProcess;
        }
        if (null !== $this->errCode) {
            $res['ErrCode'] = $this->errCode;
        }
        if (null !== $this->message) {
            $res['Message'] = $this->message;
        }
        if (null !== $this->status) {
            $res['Status'] = $this->status;
        }
        if (null !== $this->totalProcess) {
            $res['TotalProcess'] = $this->totalProcess;
        }
        if (null !== $this->url) {
            $res['Url'] = $this->url;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return data
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AsyncTaskId'])) {
            $model->asyncTaskId = $map['AsyncTaskId'];
        }
        if (isset($map['ConsumedProcess'])) {
            $model->consumedProcess = $map['ConsumedProcess'];
        }
        if (isset($map['ErrCode'])) {
            $model->errCode = $map['ErrCode'];
        }
        if (isset($map['Message'])) {
            $model->message = $map['Message'];
        }
        if (isset($map['Status'])) {
            $model->status = $map['Status'];
        }
        if (isset($map['TotalProcess'])) {
            $model->totalProcess = $map['TotalProcess'];
        }
        if (isset($map['Url'])) {
            $model->url = $map['Url'];
        }

        return $model;
    }
}

<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Dypnsapi\V20170525\Models;

use AlibabaCloud\Tea\Model;

class SendSmsVerifyCodeRequest extends Model
{
    /**
     * @description The length of the verification code. Default value: 4. Valid values: 4 to 8.
     *
     * @example 4
     *
     * @var int
     */
    public $codeLength;

    /**
     * @description The type of the generated verification code. Default value: 1. Valid values:
     *
     *   1: digits only
     *   2: uppercase letters only
     *   3: lowercase letters only
     *   4: uppercase and lowercase letters
     *   5: digits and uppercase letters
     *   6: digits and lowercase letters
     *   7: digits and uppercase and lowercase letters
     *
     * @example 1
     *
     * @var int
     */
    public $codeType;

    /**
     * @description The country code of the phone number. SMS verification codes can be sent only by using phone numbers in the Chinese mainland. Default value: 86.
     *
     * @example 86
     *
     * @var string
     */
    public $countryCode;

    /**
     * @description Specifies how to handle the verification codes received earlier in a case where verification codes are sent to the same phone number for the same scenario within the validity period.
     *
     *   1 (default): The latest verification code overwrites the verification codes received earlier. In this case, verification codes received earlier expire.
     *   2: Verification codes within their validity period are valid and can be used for verification.
     *
     * @example 1
     *
     * @var int
     */
    public $duplicatePolicy;

    /**
     * @description The time interval. Unit: seconds. Default value: 60. This parameter specifies how often you can send a verification code.
     *
     * @example 60
     *
     * @var int
     */
    public $interval;

    /**
     * @description The external ID.
     *
     * @example 12358794Aqzaq
     *
     * @var string
     */
    public $outId;

    /**
     * @var int
     */
    public $ownerId;

    /**
     * @description The phone number.
     *
     * This parameter is required.
     * @example 86130****0000
     *
     * @var string
     */
    public $phoneNumber;

    /**
     * @var string
     */
    public $resourceOwnerAccount;

    /**
     * @var int
     */
    public $resourceOwnerId;

    /**
     * @description Specifies whether to return a verification code.
     *
     *   **true**
     *   **false**
     *
     * @example false
     *
     * @var bool
     */
    public $returnVerifyCode;

    /**
     * @description The verification service name. If this parameter is not specified, the default service is used. The name can be up to 20 characters in length.
     *
     * @example Aliyun
     *
     * @var string
     */
    public $schemeName;

    /**
     * @description The signature.
     *
     * This parameter is required.
     * @example Aliyun Test
     *
     * @var string
     */
    public $signName;

    /**
     * @description The extension code of the upstream text message. Upstream text messages are text messages sent to the communication service provider. Upstream text messages are used to customize a service, complete an inquiry, or send a request. You are charged for sending upstream text messages based on the billing standards of the service provider.
     *
     * >  The extension code is automatically generated by the system when the signature is generated. You do not need to specify the extension code. You can skip this parameter based on your business requirements. If you want to use custom extension codes, contact your account manager.
     * @example 1213123
     *
     * @var string
     */
    public $smsUpExtendCode;

    /**
     * @description The code of the text message template.
     *
     * Log on to the [SMS console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview). In the left-side navigation pane, click **Go China** or **Go Globe**. You can view the text message template code in the **Template Code** column on the **Message Templates** tab.
     *
     * This parameter is required.
     * @example azsq_*****
     *
     * @var string
     */
    public $templateCode;

    /**
     * @description The value of the variable in the text message template. The verification code is replaced with "##code##".
     *
     * >
     *
     *   If line breaks are required in JSON-formatted data, they must meet the relevant requirements that are specified in the standard JSON protocol.
     *
     *   For more information about template variables, see [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).
     *
     * This parameter is required.
     * @example {"code":"##code##"}
     *
     * @var string
     */
    public $templateParam;

    /**
     * @description The validity period of the verification code. Unit: seconds. Default value: 300.
     *
     * @example 300
     *
     * @var int
     */
    public $validTime;
    protected $_name = [
        'codeLength'           => 'CodeLength',
        'codeType'             => 'CodeType',
        'countryCode'          => 'CountryCode',
        'duplicatePolicy'      => 'DuplicatePolicy',
        'interval'             => 'Interval',
        'outId'                => 'OutId',
        'ownerId'              => 'OwnerId',
        'phoneNumber'          => 'PhoneNumber',
        'resourceOwnerAccount' => 'ResourceOwnerAccount',
        'resourceOwnerId'      => 'ResourceOwnerId',
        'returnVerifyCode'     => 'ReturnVerifyCode',
        'schemeName'           => 'SchemeName',
        'signName'             => 'SignName',
        'smsUpExtendCode'      => 'SmsUpExtendCode',
        'templateCode'         => 'TemplateCode',
        'templateParam'        => 'TemplateParam',
        'validTime'            => 'ValidTime',
    ];

    public function validate()
    {
    }

    public function toMap()
    {
        $res = [];
        if (null !== $this->codeLength) {
            $res['CodeLength'] = $this->codeLength;
        }
        if (null !== $this->codeType) {
            $res['CodeType'] = $this->codeType;
        }
        if (null !== $this->countryCode) {
            $res['CountryCode'] = $this->countryCode;
        }
        if (null !== $this->duplicatePolicy) {
            $res['DuplicatePolicy'] = $this->duplicatePolicy;
        }
        if (null !== $this->interval) {
            $res['Interval'] = $this->interval;
        }
        if (null !== $this->outId) {
            $res['OutId'] = $this->outId;
        }
        if (null !== $this->ownerId) {
            $res['OwnerId'] = $this->ownerId;
        }
        if (null !== $this->phoneNumber) {
            $res['PhoneNumber'] = $this->phoneNumber;
        }
        if (null !== $this->resourceOwnerAccount) {
            $res['ResourceOwnerAccount'] = $this->resourceOwnerAccount;
        }
        if (null !== $this->resourceOwnerId) {
            $res['ResourceOwnerId'] = $this->resourceOwnerId;
        }
        if (null !== $this->returnVerifyCode) {
            $res['ReturnVerifyCode'] = $this->returnVerifyCode;
        }
        if (null !== $this->schemeName) {
            $res['SchemeName'] = $this->schemeName;
        }
        if (null !== $this->signName) {
            $res['SignName'] = $this->signName;
        }
        if (null !== $this->smsUpExtendCode) {
            $res['SmsUpExtendCode'] = $this->smsUpExtendCode;
        }
        if (null !== $this->templateCode) {
            $res['TemplateCode'] = $this->templateCode;
        }
        if (null !== $this->templateParam) {
            $res['TemplateParam'] = $this->templateParam;
        }
        if (null !== $this->validTime) {
            $res['ValidTime'] = $this->validTime;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return SendSmsVerifyCodeRequest
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['CodeLength'])) {
            $model->codeLength = $map['CodeLength'];
        }
        if (isset($map['CodeType'])) {
            $model->codeType = $map['CodeType'];
        }
        if (isset($map['CountryCode'])) {
            $model->countryCode = $map['CountryCode'];
        }
        if (isset($map['DuplicatePolicy'])) {
            $model->duplicatePolicy = $map['DuplicatePolicy'];
        }
        if (isset($map['Interval'])) {
            $model->interval = $map['Interval'];
        }
        if (isset($map['OutId'])) {
            $model->outId = $map['OutId'];
        }
        if (isset($map['OwnerId'])) {
            $model->ownerId = $map['OwnerId'];
        }
        if (isset($map['PhoneNumber'])) {
            $model->phoneNumber = $map['PhoneNumber'];
        }
        if (isset($map['ResourceOwnerAccount'])) {
            $model->resourceOwnerAccount = $map['ResourceOwnerAccount'];
        }
        if (isset($map['ResourceOwnerId'])) {
            $model->resourceOwnerId = $map['ResourceOwnerId'];
        }
        if (isset($map['ReturnVerifyCode'])) {
            $model->returnVerifyCode = $map['ReturnVerifyCode'];
        }
        if (isset($map['SchemeName'])) {
            $model->schemeName = $map['SchemeName'];
        }
        if (isset($map['SignName'])) {
            $model->signName = $map['SignName'];
        }
        if (isset($map['SmsUpExtendCode'])) {
            $model->smsUpExtendCode = $map['SmsUpExtendCode'];
        }
        if (isset($map['TemplateCode'])) {
            $model->templateCode = $map['TemplateCode'];
        }
        if (isset($map['TemplateParam'])) {
            $model->templateParam = $map['TemplateParam'];
        }
        if (isset($map['ValidTime'])) {
            $model->validTime = $map['ValidTime'];
        }

        return $model;
    }
}

<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Cloudfw\V20171207\Models\DescribeVulnerabilityProtectedListResponseBody;

use AlibabaCloud\Dara\Model;
use AlibabaCloud\SDK\Cloudfw\V20171207\Models\DescribeVulnerabilityProtectedListResponseBody\vulnList\resourceList;

class vulnList extends Model
{
    /**
     * @var int
     */
    public $attackCnt;

    /**
     * @var int
     */
    public $attackType;

    /**
     * @var string
     */
    public $basicRuleIds;

    /**
     * @var string
     */
    public $cveId;

    /**
     * @var int
     */
    public $firstTime;

    /**
     * @var int
     */
    public $highlightTag;

    /**
     * @var int
     */
    public $lastTime;

    /**
     * @var string
     */
    public $memberUid;

    /**
     * @var bool
     */
    public $needOpenBasicRule;

    /**
     * @var string
     */
    public $needOpenBasicRuleUuids;

    /**
     * @var bool
     */
    public $needOpenRunMode;

    /**
     * @var bool
     */
    public $needOpenVirtualPatche;

    /**
     * @var string
     */
    public $needOpenVirtualPatcheUuids;

    /**
     * @var int
     */
    public $needRuleClass;

    /**
     * @var int
     */
    public $resourceCnt;

    /**
     * @var resourceList[]
     */
    public $resourceList;

    /**
     * @var string
     */
    public $virtualPatcheIds;

    /**
     * @var string
     */
    public $vulnKey;

    /**
     * @var string
     */
    public $vulnLevel;

    /**
     * @var string
     */
    public $vulnName;

    /**
     * @var string
     */
    public $vulnStatus;

    /**
     * @var string
     */
    public $vulnType;
    protected $_name = [
        'attackCnt' => 'AttackCnt',
        'attackType' => 'AttackType',
        'basicRuleIds' => 'BasicRuleIds',
        'cveId' => 'CveId',
        'firstTime' => 'FirstTime',
        'highlightTag' => 'HighlightTag',
        'lastTime' => 'LastTime',
        'memberUid' => 'MemberUid',
        'needOpenBasicRule' => 'NeedOpenBasicRule',
        'needOpenBasicRuleUuids' => 'NeedOpenBasicRuleUuids',
        'needOpenRunMode' => 'NeedOpenRunMode',
        'needOpenVirtualPatche' => 'NeedOpenVirtualPatche',
        'needOpenVirtualPatcheUuids' => 'NeedOpenVirtualPatcheUuids',
        'needRuleClass' => 'NeedRuleClass',
        'resourceCnt' => 'ResourceCnt',
        'resourceList' => 'ResourceList',
        'virtualPatcheIds' => 'VirtualPatcheIds',
        'vulnKey' => 'VulnKey',
        'vulnLevel' => 'VulnLevel',
        'vulnName' => 'VulnName',
        'vulnStatus' => 'VulnStatus',
        'vulnType' => 'VulnType',
    ];

    public function validate()
    {
        if (\is_array($this->resourceList)) {
            Model::validateArray($this->resourceList);
        }
        parent::validate();
    }

    public function toArray($noStream = false)
    {
        $res = [];
        if (null !== $this->attackCnt) {
            $res['AttackCnt'] = $this->attackCnt;
        }

        if (null !== $this->attackType) {
            $res['AttackType'] = $this->attackType;
        }

        if (null !== $this->basicRuleIds) {
            $res['BasicRuleIds'] = $this->basicRuleIds;
        }

        if (null !== $this->cveId) {
            $res['CveId'] = $this->cveId;
        }

        if (null !== $this->firstTime) {
            $res['FirstTime'] = $this->firstTime;
        }

        if (null !== $this->highlightTag) {
            $res['HighlightTag'] = $this->highlightTag;
        }

        if (null !== $this->lastTime) {
            $res['LastTime'] = $this->lastTime;
        }

        if (null !== $this->memberUid) {
            $res['MemberUid'] = $this->memberUid;
        }

        if (null !== $this->needOpenBasicRule) {
            $res['NeedOpenBasicRule'] = $this->needOpenBasicRule;
        }

        if (null !== $this->needOpenBasicRuleUuids) {
            $res['NeedOpenBasicRuleUuids'] = $this->needOpenBasicRuleUuids;
        }

        if (null !== $this->needOpenRunMode) {
            $res['NeedOpenRunMode'] = $this->needOpenRunMode;
        }

        if (null !== $this->needOpenVirtualPatche) {
            $res['NeedOpenVirtualPatche'] = $this->needOpenVirtualPatche;
        }

        if (null !== $this->needOpenVirtualPatcheUuids) {
            $res['NeedOpenVirtualPatcheUuids'] = $this->needOpenVirtualPatcheUuids;
        }

        if (null !== $this->needRuleClass) {
            $res['NeedRuleClass'] = $this->needRuleClass;
        }

        if (null !== $this->resourceCnt) {
            $res['ResourceCnt'] = $this->resourceCnt;
        }

        if (null !== $this->resourceList) {
            if (\is_array($this->resourceList)) {
                $res['ResourceList'] = [];
                $n1 = 0;
                foreach ($this->resourceList as $item1) {
                    $res['ResourceList'][$n1] = null !== $item1 ? $item1->toArray($noStream) : $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->virtualPatcheIds) {
            $res['VirtualPatcheIds'] = $this->virtualPatcheIds;
        }

        if (null !== $this->vulnKey) {
            $res['VulnKey'] = $this->vulnKey;
        }

        if (null !== $this->vulnLevel) {
            $res['VulnLevel'] = $this->vulnLevel;
        }

        if (null !== $this->vulnName) {
            $res['VulnName'] = $this->vulnName;
        }

        if (null !== $this->vulnStatus) {
            $res['VulnStatus'] = $this->vulnStatus;
        }

        if (null !== $this->vulnType) {
            $res['VulnType'] = $this->vulnType;
        }

        return $res;
    }

    public function toMap($noStream = false)
    {
        return $this->toArray($noStream);
    }

    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AttackCnt'])) {
            $model->attackCnt = $map['AttackCnt'];
        }

        if (isset($map['AttackType'])) {
            $model->attackType = $map['AttackType'];
        }

        if (isset($map['BasicRuleIds'])) {
            $model->basicRuleIds = $map['BasicRuleIds'];
        }

        if (isset($map['CveId'])) {
            $model->cveId = $map['CveId'];
        }

        if (isset($map['FirstTime'])) {
            $model->firstTime = $map['FirstTime'];
        }

        if (isset($map['HighlightTag'])) {
            $model->highlightTag = $map['HighlightTag'];
        }

        if (isset($map['LastTime'])) {
            $model->lastTime = $map['LastTime'];
        }

        if (isset($map['MemberUid'])) {
            $model->memberUid = $map['MemberUid'];
        }

        if (isset($map['NeedOpenBasicRule'])) {
            $model->needOpenBasicRule = $map['NeedOpenBasicRule'];
        }

        if (isset($map['NeedOpenBasicRuleUuids'])) {
            $model->needOpenBasicRuleUuids = $map['NeedOpenBasicRuleUuids'];
        }

        if (isset($map['NeedOpenRunMode'])) {
            $model->needOpenRunMode = $map['NeedOpenRunMode'];
        }

        if (isset($map['NeedOpenVirtualPatche'])) {
            $model->needOpenVirtualPatche = $map['NeedOpenVirtualPatche'];
        }

        if (isset($map['NeedOpenVirtualPatcheUuids'])) {
            $model->needOpenVirtualPatcheUuids = $map['NeedOpenVirtualPatcheUuids'];
        }

        if (isset($map['NeedRuleClass'])) {
            $model->needRuleClass = $map['NeedRuleClass'];
        }

        if (isset($map['ResourceCnt'])) {
            $model->resourceCnt = $map['ResourceCnt'];
        }

        if (isset($map['ResourceList'])) {
            if (!empty($map['ResourceList'])) {
                $model->resourceList = [];
                $n1 = 0;
                foreach ($map['ResourceList'] as $item1) {
                    $model->resourceList[$n1] = resourceList::fromMap($item1);
                    ++$n1;
                }
            }
        }

        if (isset($map['VirtualPatcheIds'])) {
            $model->virtualPatcheIds = $map['VirtualPatcheIds'];
        }

        if (isset($map['VulnKey'])) {
            $model->vulnKey = $map['VulnKey'];
        }

        if (isset($map['VulnLevel'])) {
            $model->vulnLevel = $map['VulnLevel'];
        }

        if (isset($map['VulnName'])) {
            $model->vulnName = $map['VulnName'];
        }

        if (isset($map['VulnStatus'])) {
            $model->vulnStatus = $map['VulnStatus'];
        }

        if (isset($map['VulnType'])) {
            $model->vulnType = $map['VulnType'];
        }

        return $model;
    }
}

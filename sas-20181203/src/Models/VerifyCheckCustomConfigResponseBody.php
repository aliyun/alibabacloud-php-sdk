<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sas\V20181203\Models;

use AlibabaCloud\SDK\Sas\V20181203\Models\VerifyCheckCustomConfigResponseBody\errorCheckConfigs;
use AlibabaCloud\SDK\Sas\V20181203\Models\VerifyCheckCustomConfigResponseBody\errorRepairConfigs;
use AlibabaCloud\Tea\Model;

class VerifyCheckCustomConfigResponseBody extends Model
{
    /**
     * @description List of check parameters with configuration errors.
     *
     * @var errorCheckConfigs[]
     */
    public $errorCheckConfigs;

    /**
     * @description List of repair parameters with configuration check errors.
     *
     * @var errorRepairConfigs[]
     */
    public $errorRepairConfigs;

    /**
     * @description The ID of this call request, a unique identifier generated by Alibaba Cloud for the request, which can be used for troubleshooting and problem localization.
     *
     * @example 7532B7EE-7CE7-5F4D-BF04-B12447DD****
     *
     * @var string
     */
    public $requestId;
    protected $_name = [
        'errorCheckConfigs' => 'ErrorCheckConfigs',
        'errorRepairConfigs' => 'ErrorRepairConfigs',
        'requestId' => 'RequestId',
    ];

    public function validate() {}

    public function toMap()
    {
        $res = [];
        if (null !== $this->errorCheckConfigs) {
            $res['ErrorCheckConfigs'] = [];
            if (null !== $this->errorCheckConfigs && \is_array($this->errorCheckConfigs)) {
                $n = 0;
                foreach ($this->errorCheckConfigs as $item) {
                    $res['ErrorCheckConfigs'][$n++] = null !== $item ? $item->toMap() : $item;
                }
            }
        }
        if (null !== $this->errorRepairConfigs) {
            $res['ErrorRepairConfigs'] = [];
            if (null !== $this->errorRepairConfigs && \is_array($this->errorRepairConfigs)) {
                $n = 0;
                foreach ($this->errorRepairConfigs as $item) {
                    $res['ErrorRepairConfigs'][$n++] = null !== $item ? $item->toMap() : $item;
                }
            }
        }
        if (null !== $this->requestId) {
            $res['RequestId'] = $this->requestId;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return VerifyCheckCustomConfigResponseBody
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['ErrorCheckConfigs'])) {
            if (!empty($map['ErrorCheckConfigs'])) {
                $model->errorCheckConfigs = [];
                $n = 0;
                foreach ($map['ErrorCheckConfigs'] as $item) {
                    $model->errorCheckConfigs[$n++] = null !== $item ? errorCheckConfigs::fromMap($item) : $item;
                }
            }
        }
        if (isset($map['ErrorRepairConfigs'])) {
            if (!empty($map['ErrorRepairConfigs'])) {
                $model->errorRepairConfigs = [];
                $n = 0;
                foreach ($map['ErrorRepairConfigs'] as $item) {
                    $model->errorRepairConfigs[$n++] = null !== $item ? errorRepairConfigs::fromMap($item) : $item;
                }
            }
        }
        if (isset($map['RequestId'])) {
            $model->requestId = $map['RequestId'];
        }

        return $model;
    }
}

<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sas\V20181203\Models\GetFileDetectReportResponseBody;

use AlibabaCloud\Tea\Model;

class data extends Model
{
    /**
     * @description The basic information about the detected file.
     *
     * @example {
     * }
     * @var string
     */
    public $basic;

    /**
     * @description The hash value of the file.
     *
     * @example c42b5f6bde0b730ece2923266333****
     *
     * @var string
     */
    public $fileHash;

    /**
     * @description The name of the file.
     *
     * @example test.zip
     *
     * @var string
     */
    public $filename;

    /**
     * @description Indicates whether the file data exists in the cloud sandbox. Valid values:
     *
     *   **true**
     *   **false**
     *
     * @example true
     *
     * @var bool
     */
    public $hasData;

    /**
     * @description The threat intelligence event, which is a JSON array.
     *
     * Valid values:
     *
     *   The threat type. The value is an array. The elements in the array can be DDoS trojans, mining programs, network layer intrusions, network service scans, network sharing and discovery, mining pools, exploits, dark webs, malicious logons, malicious download sources, C\\&C servers, webshells, and web attacks.
     *
     * @example ["The threat type"]
     *
     * @var string
     */
    public $intelligences;

    /**
     * @description The details of the cloud sandbox check results.
     *
     * @example {\\"BehaviorData\\": {}, \\"ProcessData\\": {}, \\"SandboxData\\": {}, \\"AttackData\\": [], \\"NetworkData\\": {}, \\"SolutionData\\": {}, \\"FileData\\": {}}
     *
     * @var string
     */
    public $sandbox;

    /**
     * @description Indicates whether the check report is displayed. Valid values:
     *
     *   **true**
     *   **false**
     *
     * @example true
     *
     * @var bool
     */
    public $showTab;

    /**
     * @description The threat level. Valid values:
     *
     *   **0**: normal
     *   **1**: suspicious
     *   **2**: high
     *
     * @example 2
     *
     * @var int
     */
    public $threatLevel;

    /**
     * @description The risk tags and server tags that are generated by analyzing threat intelligence and security events. The value is a string array. The array includes the following elements:
     *
     *   **threat_type_desc**: the threat type.
     *   **last_find_time**: the last time the threat was detected.
     *   **risk_type**: indicates whether the tag is malicious. The value 0 indicates that the tag is not malicious. The value 1 indicates that the tag is malicious. The value -1 indicates that whether the tag type is malicious is unknown.
     *   **threat_type**: the threat type. The value is an array. The elements in the array can be network layer intrusion, network service scanning, network sharing and discovery, mining pool, exploits, darknet, malicious logon, malicious download source, central control, web shell, and web attack.
     *
     * @example [{"threat_type_desc": "test","risk_type": 1,"threat_type": ""}]
     *
     * @var string
     */
    public $threatTypes;
    protected $_name = [
        'basic'         => 'Basic',
        'fileHash'      => 'FileHash',
        'filename'      => 'Filename',
        'hasData'       => 'HasData',
        'intelligences' => 'Intelligences',
        'sandbox'       => 'Sandbox',
        'showTab'       => 'ShowTab',
        'threatLevel'   => 'ThreatLevel',
        'threatTypes'   => 'ThreatTypes',
    ];

    public function validate()
    {
    }

    public function toMap()
    {
        $res = [];
        if (null !== $this->basic) {
            $res['Basic'] = $this->basic;
        }
        if (null !== $this->fileHash) {
            $res['FileHash'] = $this->fileHash;
        }
        if (null !== $this->filename) {
            $res['Filename'] = $this->filename;
        }
        if (null !== $this->hasData) {
            $res['HasData'] = $this->hasData;
        }
        if (null !== $this->intelligences) {
            $res['Intelligences'] = $this->intelligences;
        }
        if (null !== $this->sandbox) {
            $res['Sandbox'] = $this->sandbox;
        }
        if (null !== $this->showTab) {
            $res['ShowTab'] = $this->showTab;
        }
        if (null !== $this->threatLevel) {
            $res['ThreatLevel'] = $this->threatLevel;
        }
        if (null !== $this->threatTypes) {
            $res['ThreatTypes'] = $this->threatTypes;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return data
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['Basic'])) {
            $model->basic = $map['Basic'];
        }
        if (isset($map['FileHash'])) {
            $model->fileHash = $map['FileHash'];
        }
        if (isset($map['Filename'])) {
            $model->filename = $map['Filename'];
        }
        if (isset($map['HasData'])) {
            $model->hasData = $map['HasData'];
        }
        if (isset($map['Intelligences'])) {
            $model->intelligences = $map['Intelligences'];
        }
        if (isset($map['Sandbox'])) {
            $model->sandbox = $map['Sandbox'];
        }
        if (isset($map['ShowTab'])) {
            $model->showTab = $map['ShowTab'];
        }
        if (isset($map['ThreatLevel'])) {
            $model->threatLevel = $map['ThreatLevel'];
        }
        if (isset($map['ThreatTypes'])) {
            $model->threatTypes = $map['ThreatTypes'];
        }

        return $model;
    }
}

<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sas\V20181203\Models\DescribeSecurityStatInfoResponseBody;

use AlibabaCloud\Dara\Model;

class vulnerability extends Model
{
    /**
     * @var int
     */
    public $asapCount;

    /**
     * @var string[]
     */
    public $asapList;

    /**
     * @var string[]
     */
    public $dateArray;

    /**
     * @var int
     */
    public $laterCount;

    /**
     * @var string[]
     */
    public $laterList;

    /**
     * @var string[]
     */
    public $levelsOn;

    /**
     * @var int
     */
    public $nntfCount;

    /**
     * @var string[]
     */
    public $nntfList;

    /**
     * @var string[]
     */
    public $timeArray;

    /**
     * @var int
     */
    public $totalCount;

    /**
     * @var string[]
     */
    public $valueArray;
    protected $_name = [
        'asapCount' => 'AsapCount',
        'asapList' => 'AsapList',
        'dateArray' => 'DateArray',
        'laterCount' => 'LaterCount',
        'laterList' => 'LaterList',
        'levelsOn' => 'LevelsOn',
        'nntfCount' => 'NntfCount',
        'nntfList' => 'NntfList',
        'timeArray' => 'TimeArray',
        'totalCount' => 'TotalCount',
        'valueArray' => 'ValueArray',
    ];

    public function validate()
    {
        if (\is_array($this->asapList)) {
            Model::validateArray($this->asapList);
        }
        if (\is_array($this->dateArray)) {
            Model::validateArray($this->dateArray);
        }
        if (\is_array($this->laterList)) {
            Model::validateArray($this->laterList);
        }
        if (\is_array($this->levelsOn)) {
            Model::validateArray($this->levelsOn);
        }
        if (\is_array($this->nntfList)) {
            Model::validateArray($this->nntfList);
        }
        if (\is_array($this->timeArray)) {
            Model::validateArray($this->timeArray);
        }
        if (\is_array($this->valueArray)) {
            Model::validateArray($this->valueArray);
        }
        parent::validate();
    }

    public function toArray($noStream = false)
    {
        $res = [];
        if (null !== $this->asapCount) {
            $res['AsapCount'] = $this->asapCount;
        }

        if (null !== $this->asapList) {
            if (\is_array($this->asapList)) {
                $res['AsapList'] = [];
                $n1 = 0;
                foreach ($this->asapList as $item1) {
                    $res['AsapList'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->dateArray) {
            if (\is_array($this->dateArray)) {
                $res['DateArray'] = [];
                $n1 = 0;
                foreach ($this->dateArray as $item1) {
                    $res['DateArray'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->laterCount) {
            $res['LaterCount'] = $this->laterCount;
        }

        if (null !== $this->laterList) {
            if (\is_array($this->laterList)) {
                $res['LaterList'] = [];
                $n1 = 0;
                foreach ($this->laterList as $item1) {
                    $res['LaterList'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->levelsOn) {
            if (\is_array($this->levelsOn)) {
                $res['LevelsOn'] = [];
                $n1 = 0;
                foreach ($this->levelsOn as $item1) {
                    $res['LevelsOn'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->nntfCount) {
            $res['NntfCount'] = $this->nntfCount;
        }

        if (null !== $this->nntfList) {
            if (\is_array($this->nntfList)) {
                $res['NntfList'] = [];
                $n1 = 0;
                foreach ($this->nntfList as $item1) {
                    $res['NntfList'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->timeArray) {
            if (\is_array($this->timeArray)) {
                $res['TimeArray'] = [];
                $n1 = 0;
                foreach ($this->timeArray as $item1) {
                    $res['TimeArray'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (null !== $this->totalCount) {
            $res['TotalCount'] = $this->totalCount;
        }

        if (null !== $this->valueArray) {
            if (\is_array($this->valueArray)) {
                $res['ValueArray'] = [];
                $n1 = 0;
                foreach ($this->valueArray as $item1) {
                    $res['ValueArray'][$n1] = $item1;
                    ++$n1;
                }
            }
        }

        return $res;
    }

    public function toMap($noStream = false)
    {
        return $this->toArray($noStream);
    }

    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AsapCount'])) {
            $model->asapCount = $map['AsapCount'];
        }

        if (isset($map['AsapList'])) {
            if (!empty($map['AsapList'])) {
                $model->asapList = [];
                $n1 = 0;
                foreach ($map['AsapList'] as $item1) {
                    $model->asapList[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['DateArray'])) {
            if (!empty($map['DateArray'])) {
                $model->dateArray = [];
                $n1 = 0;
                foreach ($map['DateArray'] as $item1) {
                    $model->dateArray[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['LaterCount'])) {
            $model->laterCount = $map['LaterCount'];
        }

        if (isset($map['LaterList'])) {
            if (!empty($map['LaterList'])) {
                $model->laterList = [];
                $n1 = 0;
                foreach ($map['LaterList'] as $item1) {
                    $model->laterList[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['LevelsOn'])) {
            if (!empty($map['LevelsOn'])) {
                $model->levelsOn = [];
                $n1 = 0;
                foreach ($map['LevelsOn'] as $item1) {
                    $model->levelsOn[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['NntfCount'])) {
            $model->nntfCount = $map['NntfCount'];
        }

        if (isset($map['NntfList'])) {
            if (!empty($map['NntfList'])) {
                $model->nntfList = [];
                $n1 = 0;
                foreach ($map['NntfList'] as $item1) {
                    $model->nntfList[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['TimeArray'])) {
            if (!empty($map['TimeArray'])) {
                $model->timeArray = [];
                $n1 = 0;
                foreach ($map['TimeArray'] as $item1) {
                    $model->timeArray[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        if (isset($map['TotalCount'])) {
            $model->totalCount = $map['TotalCount'];
        }

        if (isset($map['ValueArray'])) {
            if (!empty($map['ValueArray'])) {
                $model->valueArray = [];
                $n1 = 0;
                foreach ($map['ValueArray'] as $item1) {
                    $model->valueArray[$n1] = $item1;
                    ++$n1;
                }
            }
        }

        return $model;
    }
}

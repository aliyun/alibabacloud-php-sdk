<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sas\V20181203\Models;

use AlibabaCloud\SDK\Sas\V20181203\Models\ListCheckRuleInstanceResponseBody\checkRuleInstances;
use AlibabaCloud\Tea\Model;

class ListCheckRuleInstanceResponseBody extends Model
{
    /**
     * @description Alibaba Cloud account ID.
     *
     * @example 103784262032****
     *
     * @var string
     */
    public $aliUid;

    /**
     * @description Subtype of the cloud product.
     *
     * @example Disk
     *
     * @var string
     */
    public $assetSubType;

    /**
     * @description Type of cloud assets.
     *
     * @example ECS
     *
     * @var string
     */
    public $assetType;

    /**
     * @description Check item ID.
     *
     * @example 23
     *
     * @var string
     */
    public $checkId;

    /**
     * @description List of instance rule information.
     *
     * @var checkRuleInstances[]
     */
    public $checkRuleInstances;

    /**
     * @description The ID of the current request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.
     *
     * @example 7532B7EE-7CE7-5F4D-BF04-B12447DD****
     *
     * @var string
     */
    public $requestId;

    /**
     * @description Cloud vendor. Values:
     * - **ALIYUN**: Alibaba Cloud
     * - **TENCENT**: Tencent Cloud
     * - **MICROSOFT**: Microsoft
     * - **AWS**: Amazon Web Services (AWS)
     *
     * @example Aliyun
     *
     * @var string
     */
    public $vendor;
    protected $_name = [
        'aliUid' => 'AliUid',
        'assetSubType' => 'AssetSubType',
        'assetType' => 'AssetType',
        'checkId' => 'CheckId',
        'checkRuleInstances' => 'CheckRuleInstances',
        'requestId' => 'RequestId',
        'vendor' => 'Vendor',
    ];

    public function validate() {}

    public function toMap()
    {
        $res = [];
        if (null !== $this->aliUid) {
            $res['AliUid'] = $this->aliUid;
        }
        if (null !== $this->assetSubType) {
            $res['AssetSubType'] = $this->assetSubType;
        }
        if (null !== $this->assetType) {
            $res['AssetType'] = $this->assetType;
        }
        if (null !== $this->checkId) {
            $res['CheckId'] = $this->checkId;
        }
        if (null !== $this->checkRuleInstances) {
            $res['CheckRuleInstances'] = [];
            if (null !== $this->checkRuleInstances && \is_array($this->checkRuleInstances)) {
                $n = 0;
                foreach ($this->checkRuleInstances as $item) {
                    $res['CheckRuleInstances'][$n++] = null !== $item ? $item->toMap() : $item;
                }
            }
        }
        if (null !== $this->requestId) {
            $res['RequestId'] = $this->requestId;
        }
        if (null !== $this->vendor) {
            $res['Vendor'] = $this->vendor;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return ListCheckRuleInstanceResponseBody
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AliUid'])) {
            $model->aliUid = $map['AliUid'];
        }
        if (isset($map['AssetSubType'])) {
            $model->assetSubType = $map['AssetSubType'];
        }
        if (isset($map['AssetType'])) {
            $model->assetType = $map['AssetType'];
        }
        if (isset($map['CheckId'])) {
            $model->checkId = $map['CheckId'];
        }
        if (isset($map['CheckRuleInstances'])) {
            if (!empty($map['CheckRuleInstances'])) {
                $model->checkRuleInstances = [];
                $n = 0;
                foreach ($map['CheckRuleInstances'] as $item) {
                    $model->checkRuleInstances[$n++] = null !== $item ? checkRuleInstances::fromMap($item) : $item;
                }
            }
        }
        if (isset($map['RequestId'])) {
            $model->requestId = $map['RequestId'];
        }
        if (isset($map['Vendor'])) {
            $model->vendor = $map['Vendor'];
        }

        return $model;
    }
}

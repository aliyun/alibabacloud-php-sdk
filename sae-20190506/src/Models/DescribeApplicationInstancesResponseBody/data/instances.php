<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sae\V20190506\Models\DescribeApplicationInstancesResponseBody\data;

use AlibabaCloud\SDK\Sae\V20190506\Models\DescribeApplicationInstancesResponseBody\data\instances\sidecarContainersStatus;
use AlibabaCloud\Tea\Model;

class instances extends Model
{
    /**
     * @description The start time of the instance creation process. Unit: milliseconds.
     *
     * @example 1558442609000
     *
     * @var int
     */
    public $createTimeStamp;

    /**
     * @example False
     *
     * @var bool
     */
    public $debugStatus;

    /**
     * @description The elastic IP address (EIP).
     *
     * @example 8.129.XX.XXX
     *
     * @var string
     */
    public $eip;

    /**
     * @description The end time of the instance creation process. Unit: milliseconds.
     *
     * @example 1642757283000
     *
     * @var int
     */
    public $finishTimeStamp;

    /**
     * @description The ID of the group to which the instance belongs.
     *
     * @example b2a8a925-477a-4ed7-b825-d5e22500****
     *
     * @var string
     */
    public $groupId;

    /**
     * @description The address of the repository.
     *
     * >  If you deploy the application by using a JAR or WAR package, the image generated by SAE is not available for download.
     *
     * @example registry-vpc.cn-beijing.aliyuncs.com/sae-demo-image/cartservice:1.0
     *
     * @var string
     */
    public $imageUrl;

    /**
     * @description The internal IP address of the instance.
     *
     * @example 192.168.X.X
     *
     * @var string
     */
    public $instanceContainerIp;

    /**
     * @description The number of times that the instance restarted.
     *
     * @example 0
     *
     * @var int
     */
    public $instanceContainerRestarts;

    /**
     * @description The state of the instance. Valid values:
     *
     *   **Error**: An error occurred during the instance startup.
     *   **CrashLoopBackOff**: The container failed to start. An error occurred during the startup process and persisted after the restart.
     *   **ErrImagePull**: An error occurred while the container image was being pulled from the instance.
     *   **ImagePullBackOff**: The container image could not be obtained.
     *   **Pending**: The instance is waiting to be scheduled.
     *   **Unknown**: An unknown exception occurred.
     *   **Terminating**: The instance creation process is being terminated.
     *   **NotFound**: The instance cannot be found.
     *   **PodInitializing**: The instance is being initialized.
     *   **Init:0/1**: The instance is initialized.
     *   **Running**: The instance is running.
     *
     * @example Running
     *
     * @var string
     */
    public $instanceContainerStatus;

    /**
     * @description The configurations of health checks. Valid values:
     *
     *   **WithoutHealthCheckConfig**: Liveness and readiness checks are not configured.
     *   **WithoutLivenessConfig**: The liveness check is not configured.
     *   **WithoutReadinessConfig**: The readiness check is not configured.
     *   **NotCheckedYet**: The health checks are not performed or are in progress.
     *   **LivenessUnhealthy**: The instance failed the liveness check.
     *   **ReadinessUnhealthy**: The instance failed the readiness check.
     *   **Unhealthy**: The instance failed both liveness and readiness checks.
     *   **Healthy**: The instance passed both liveness and readiness checks.
     *
     * @example WithoutHealthCheckConfig
     *
     * @var string
     */
    public $instanceHealthStatus;

    /**
     * @description The ID of the instance.
     *
     * @example b2a8a925-477a-4ed7-b825-d5e22500****
     *
     * @var string
     */
    public $instanceId;

    /**
     * @description The status of the main container.
     *
     * @example Running
     *
     * @var string
     */
    public $mainContainerStatus;

    /**
     * @description The version of the package.
     *
     * @example 1609939496200
     *
     * @var string
     */
    public $packageVersion;

    /**
     * @description The status of the sidecar container.
     *
     * @var sidecarContainersStatus[]
     */
    public $sidecarContainersStatus;

    /**
     * @example 1750061980000
     *
     * @var int
     */
    public $timestamp;

    /**
     * @description If the health check of an application instance fails, the detailed failure cause or error message is returned. If the health check of an application instance passes, no response is returned.
     *
     * @example Null
     *
     * @var string
     */
    public $unhealthyMessage;

    /**
     * @description The ID of the zone where the instance is deployed.
     *
     * @example vsw-***
     *
     * @var string
     */
    public $vSwitchId;
    protected $_name = [
        'createTimeStamp' => 'CreateTimeStamp',
        'debugStatus' => 'DebugStatus',
        'eip' => 'Eip',
        'finishTimeStamp' => 'FinishTimeStamp',
        'groupId' => 'GroupId',
        'imageUrl' => 'ImageUrl',
        'instanceContainerIp' => 'InstanceContainerIp',
        'instanceContainerRestarts' => 'InstanceContainerRestarts',
        'instanceContainerStatus' => 'InstanceContainerStatus',
        'instanceHealthStatus' => 'InstanceHealthStatus',
        'instanceId' => 'InstanceId',
        'mainContainerStatus' => 'MainContainerStatus',
        'packageVersion' => 'PackageVersion',
        'sidecarContainersStatus' => 'SidecarContainersStatus',
        'timestamp' => 'Timestamp',
        'unhealthyMessage' => 'UnhealthyMessage',
        'vSwitchId' => 'VSwitchId',
    ];

    public function validate() {}

    public function toMap()
    {
        $res = [];
        if (null !== $this->createTimeStamp) {
            $res['CreateTimeStamp'] = $this->createTimeStamp;
        }
        if (null !== $this->debugStatus) {
            $res['DebugStatus'] = $this->debugStatus;
        }
        if (null !== $this->eip) {
            $res['Eip'] = $this->eip;
        }
        if (null !== $this->finishTimeStamp) {
            $res['FinishTimeStamp'] = $this->finishTimeStamp;
        }
        if (null !== $this->groupId) {
            $res['GroupId'] = $this->groupId;
        }
        if (null !== $this->imageUrl) {
            $res['ImageUrl'] = $this->imageUrl;
        }
        if (null !== $this->instanceContainerIp) {
            $res['InstanceContainerIp'] = $this->instanceContainerIp;
        }
        if (null !== $this->instanceContainerRestarts) {
            $res['InstanceContainerRestarts'] = $this->instanceContainerRestarts;
        }
        if (null !== $this->instanceContainerStatus) {
            $res['InstanceContainerStatus'] = $this->instanceContainerStatus;
        }
        if (null !== $this->instanceHealthStatus) {
            $res['InstanceHealthStatus'] = $this->instanceHealthStatus;
        }
        if (null !== $this->instanceId) {
            $res['InstanceId'] = $this->instanceId;
        }
        if (null !== $this->mainContainerStatus) {
            $res['MainContainerStatus'] = $this->mainContainerStatus;
        }
        if (null !== $this->packageVersion) {
            $res['PackageVersion'] = $this->packageVersion;
        }
        if (null !== $this->sidecarContainersStatus) {
            $res['SidecarContainersStatus'] = [];
            if (null !== $this->sidecarContainersStatus && \is_array($this->sidecarContainersStatus)) {
                $n = 0;
                foreach ($this->sidecarContainersStatus as $item) {
                    $res['SidecarContainersStatus'][$n++] = null !== $item ? $item->toMap() : $item;
                }
            }
        }
        if (null !== $this->timestamp) {
            $res['Timestamp'] = $this->timestamp;
        }
        if (null !== $this->unhealthyMessage) {
            $res['UnhealthyMessage'] = $this->unhealthyMessage;
        }
        if (null !== $this->vSwitchId) {
            $res['VSwitchId'] = $this->vSwitchId;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return instances
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['CreateTimeStamp'])) {
            $model->createTimeStamp = $map['CreateTimeStamp'];
        }
        if (isset($map['DebugStatus'])) {
            $model->debugStatus = $map['DebugStatus'];
        }
        if (isset($map['Eip'])) {
            $model->eip = $map['Eip'];
        }
        if (isset($map['FinishTimeStamp'])) {
            $model->finishTimeStamp = $map['FinishTimeStamp'];
        }
        if (isset($map['GroupId'])) {
            $model->groupId = $map['GroupId'];
        }
        if (isset($map['ImageUrl'])) {
            $model->imageUrl = $map['ImageUrl'];
        }
        if (isset($map['InstanceContainerIp'])) {
            $model->instanceContainerIp = $map['InstanceContainerIp'];
        }
        if (isset($map['InstanceContainerRestarts'])) {
            $model->instanceContainerRestarts = $map['InstanceContainerRestarts'];
        }
        if (isset($map['InstanceContainerStatus'])) {
            $model->instanceContainerStatus = $map['InstanceContainerStatus'];
        }
        if (isset($map['InstanceHealthStatus'])) {
            $model->instanceHealthStatus = $map['InstanceHealthStatus'];
        }
        if (isset($map['InstanceId'])) {
            $model->instanceId = $map['InstanceId'];
        }
        if (isset($map['MainContainerStatus'])) {
            $model->mainContainerStatus = $map['MainContainerStatus'];
        }
        if (isset($map['PackageVersion'])) {
            $model->packageVersion = $map['PackageVersion'];
        }
        if (isset($map['SidecarContainersStatus'])) {
            if (!empty($map['SidecarContainersStatus'])) {
                $model->sidecarContainersStatus = [];
                $n = 0;
                foreach ($map['SidecarContainersStatus'] as $item) {
                    $model->sidecarContainersStatus[$n++] = null !== $item ? sidecarContainersStatus::fromMap($item) : $item;
                }
            }
        }
        if (isset($map['Timestamp'])) {
            $model->timestamp = $map['Timestamp'];
        }
        if (isset($map['UnhealthyMessage'])) {
            $model->unhealthyMessage = $map['UnhealthyMessage'];
        }
        if (isset($map['VSwitchId'])) {
            $model->vSwitchId = $map['VSwitchId'];
        }

        return $model;
    }
}
